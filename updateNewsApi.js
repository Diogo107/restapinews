'use strict';

const puppeteer = require('puppeteer')
const TopNews = require('./Schemas/topNews')
const mongoose = require('mongoose');
const dotenv = require('dotenv').config();
var parse = require('url-parse')
var nodemailer = require('nodemailer');
var transporter = nodemailer.createTransport({
  service: "gmail",
  port: 2525,
  auth: {
    user: process.env.EMAIL, //generated by Mailtrap
    pass: process.env.PASSWORD //generated by Mailtrap
  }
});
try {
    mongoose.connect(process.env.MONGOOSE_SECRET, {
        useNewUrlParser: true
    });
} catch (error) {
    console.log('===> Error: ', error)
}

const chromeOptions = {
    headless: true,
    defaultViewport: null,
    args: [
        "--incognito",
        "--no-sandbox",
        "--single-process",
        "--no-zygote"
    ],
}

// Source => Noticias ao Minuto (pt-PT)
// Function to get the top news
const updateTopNews = async () => {
    console.log('===> inside first function')
    const url = 'https://www.noticiasaominuto.com'
    const browser = await puppeteer.launch({ headless: false})
    const page = await browser.newPage()
    await page.goto(url, {
        waitUntil: 'networkidle2'
    })
    console.log('===> page has opened')
    const topFiveNewsUrls = await page.evaluate( () => {
        const list = []
        for ( let i = 1; i < 6; i++ ) {
            list.push(document.querySelector(`body > div.main-container > div:nth-child(1) > div > div > div.col-lg-12.col-md-12.col-sm-12.col-xs-12.no-padding > div.col-lg-12.col-md-12.col-sm-12.hidden-xs.no-padding > ul > li:nth-child(${i}) > a`).getAttribute('href'))
        }
        return list
    })
    console.log('===> links were catched')
    // Update Top Five Pages Content
    async function goForContent () {
        let index = 0
        async function update () {
            if (index < topFiveNewsUrls.length){
                let duplicated = await TopNews.exists({ url: topFiveNewsUrls[index] })
                console.log('===> exists on DB? ', duplicated)
                if (!duplicated){
                    await page.goto(topFiveNewsUrls[index], {
                        waitUntil: 'networkidle2'
                    })
                    let singleTopNews = await page.evaluate(()=> {
                        let title = document.querySelector('body > div.main-container > div.bg-white > div.container-fluid.no-padding.news-wrapper > div.col-lg-8.col-md-6.col-sm-12.col-xs-12 > div.news-container > h1').innerText
                        let subtitle =  document.querySelector('body > div.main-container > div.bg-white > div.container-fluid.no-padding.news-wrapper > div.col-lg-8.col-md-6.col-sm-12.col-xs-12 > div.news-container > h2').innerText
                        let content = function () {
                            let text = []
                            for (let i = 1; i < 20; i++){
                                document.querySelector(`body > div.main-container > div.bg-white > div.container-fluid.no-padding.news-wrapper > div.col-lg-8.col-md-6.col-sm-12.col-xs-12 > div.news-container > div.row.news-main-text-container > div > div > p:nth-child(${i})`) != null && text.push(document.querySelector(`body > div.main-container > div.bg-white > div.container-fluid.no-padding.news-wrapper > div.col-lg-8.col-md-6.col-sm-12.col-xs-12 > div.news-container > div.row.news-main-text-container > div > div > p:nth-child(${i})`).innerText)
                            }
                            return text
                        }()
                        let imgUrl = document.querySelector('body > div.main-container > div.bg-white > div.container-fluid.no-padding.news-wrapper > div.col-lg-8.col-md-6.col-sm-12.col-xs-12 > div.news-container > div.news-main-image > picture > img').getAttribute('src')
                        return { title, subtitle, content, imgUrl }
                    })
                    singleTopNews.url = topFiveNewsUrls[index]
                    await TopNews.create(singleTopNews)
                }
                index++
                update ()
            } else {
                process.exit()
            }
        }
        await update ()
        //browser.close()
    }
    await goForContent()
    console.log('===> updated all top links')
}
//updateTopNews()

// Function to get other news
const getOtherNews = async () => {
    const url = 'https://www.noticiasaominuto.com'
    const browser = await puppeteer.launch({ 
        args: [ '--start-maximized'], // you can also use '--start-fullscreen'
        headless: true 
    })
    const page = await browser.newPage()
    await page.goto(url, {
        waitUntil: 'networkidle2'
    })
    let listOfUrls = await page.evaluate(()=>{
        let list = []
        let all = document.getElementsByTagName('a')
        for (i in document.getElementsByTagName('a')) {
            if (i != 'length' && i != 'item' && i != 'namedItem'){
                console.log('===>', i)
                list.push(document.getElementsByTagName('a')[i].getAttribute('href'))
            }
        }
        return list
    })
    listOfUrls = listOfUrls.filter(e => {
        //console.log(parse(e).pathname.split('/').slice(1).length > 1)
        return parse(e).pathname.split('/').slice(1).length > 2 && e.includes('https://www.noticiasaominuto.com') && !e.includes('/desporto/') && !e.includes('vozes-ao-minuto')
    })
    console.log('===> with list od Urls', listOfUrls)
    async function updateWithContent (listOfUrls) {
        for await (let url of listOfUrls){
            if (!await TopNews.exists({ url: url }) ) {
                await page.goto(url, {
                            waitUntil: 'networkidle2'
                        })
                let singleTopNews = await page.evaluate(()=> {
                    let title = document.querySelector('body > div.main-container > div.bg-white > div.container-fluid.no-padding.news-wrapper > div.col-lg-8.col-md-6.col-sm-12.col-xs-12 > div.news-container > h1') && document.querySelector('body > div.main-container > div.bg-white > div.container-fluid.no-padding.news-wrapper > div.col-lg-8.col-md-6.col-sm-12.col-xs-12 > div.news-container > h1').innerText
                    let subtitle = document.querySelector('body > div.main-container > div.bg-white > div.container-fluid.no-padding.news-wrapper > div.col-lg-8.col-md-6.col-sm-12.col-xs-12 > div.news-container > h2') && document.querySelector('body > div.main-container > div.bg-white > div.container-fluid.no-padding.news-wrapper > div.col-lg-8.col-md-6.col-sm-12.col-xs-12 > div.news-container > h2').innerText
                    let content = function () {
                        let text = []
                        for (let i = 1; i < 20; i++){
                            document.querySelector(`body > div.main-container > div.bg-white > div.container-fluid.no-padding.news-wrapper > div.col-lg-8.col-md-6.col-sm-12.col-xs-12 > div.news-container > div.row.news-main-text-container > div > div > p:nth-child(${i})`) != null && text.push(document.querySelector(`body > div.main-container > div.bg-white > div.container-fluid.no-padding.news-wrapper > div.col-lg-8.col-md-6.col-sm-12.col-xs-12 > div.news-container > div.row.news-main-text-container > div > div > p:nth-child(${i})`).innerText)
                        }
                        return text
                    }()
                    let imgUrl = document.querySelector('body > div.main-container > div.bg-white > div.container-fluid.no-padding.news-wrapper > div.col-lg-8.col-md-6.col-sm-12.col-xs-12 > div.news-container > div.news-main-image > picture > img') && document.querySelector('body > div.main-container > div.bg-white > div.container-fluid.no-padding.news-wrapper > div.col-lg-8.col-md-6.col-sm-12.col-xs-12 > div.news-container > div.news-main-image > picture > img').getAttribute('src')
                    return { title, subtitle, content, imgUrl }
                })
                singleTopNews.url = url
                singleTopNews.category = url.split('/')[3]
                console.log(singleTopNews)
                await TopNews.create(singleTopNews)
                await transporter.sendMail({
                        from: `Aviso de novas notícias`,
                        to: process.env.TO,
                        subject: 'Email Resent',
                        //text: 'Hello world!'
                        html: `<h2>Aviso</h2><p>Venho por este meio informar que existem novas notícias. Podem ser consultadas aqui: ${url}.</p><br><p>Podes também consultar mais temas aqui: https://newspaper-pt.herokuapp.com/</p>` 
                    });
            }
        }
    }
    updateWithContent (listOfUrls)
}
getOtherNews()

